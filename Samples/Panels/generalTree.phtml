<?php 
$tableParams = array(
	'tableId' 			=> 'samples-general-tree',
    'tableWidth'        => '4',
);
?>

<?php echo $this->zrayTable($tableParams); //zrayTableHtml ?>

<script type="text/javascript">

(function() {
	var storage = zray.getStorage('samplesGeneralTree');

	// create main table
	var maintable = zray.createGeneralTreeTable(storage, jQuery('#<?php echo $tableParams['tableId']; ?>'));
	maintable.setColumns([{
		label: 'col1',
		propertyName: 'col1',
		width: '25%',
		attributes: {'class': 'zdb-tree-table-cell-path zdb-ellipsis zdb-monospace'},
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			/// either the node has children or this is an object with properties
			if (rec.children > 0) {
				cushion.addClass('zdb-tree-table-cell-path-expandable');
			}
			cushion.addClass('zdb-tree-table-cell-path-display');
			
			if (rec.parent.length > 1) {
				cushion.css('margin-left', (18 * rec.level) + 'px');
			}

			cushion.click(function(event){
				$zendDevBar(event.target).parent('td').click();
			});

			var formattedText = val;
			if (typeof formattedText == 'string' && formattedText.trim().length == 0) {
				formattedText = '[Empty String Key]';
				cushion.addClass('zdb-tree-table-system-data');
			} else if (formattedText > 32) {
				cushion.attr('title', formattedText);
				formattedText = zendDevBar.shorten(formattedText, 32);
			}
			
			return cushion.text(formattedText);
		}
	},
	{
		label: 'col2',
		propertyName: 'col2',
		width: '75%',
		attributes: {'class': 'zdb-monospace zdb-ellipsis'},
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			cushion.attr('title', val);
			return cushion.text(val);
		}
	},
	{
		label: 'params',
		propertyName: 'params',
		width: '75%',
		attributes: {'class': 'zdb-monospace zdb-ellipsis'},
		getHtml: function(val, rec) {
			var cushion = $zendDevBar('<div>');
			cushion.attr('title', val);
			return cushion.text(val);
		}
	}]);
	// create main table - end
	
	zray.registerDataHandler('samples', 'multiplyGeneralTree', function(extensionData, requestData) {
		storage.setData(extensionData);
	});
})();
</script>